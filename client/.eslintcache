[{"/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/index.js":"1","/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/reportWebVitals.js":"2","/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/App.js":"3","/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/pages/MainPage/index.js":"4","/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/Navbar/index.js":"5","/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/Footer/index.js":"6","/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/InfoCard/InfoCard.js":"7","/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/InfoCard/CommonButton.js":"8","/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/Blobs/index.js":"9","/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/Navbar/AccountDropdown.js":"10","/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/Navbar/MobileNav.js":"11"},{"size":500,"mtime":1615239123758,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1615239123759,"results":"14","hashOfConfig":"13"},{"size":766,"mtime":1619818817462,"results":"15","hashOfConfig":"13"},{"size":415,"mtime":1619835984600,"results":"16","hashOfConfig":"13"},{"size":2687,"mtime":1619835892055,"results":"17","hashOfConfig":"13"},{"size":760,"mtime":1619725652189,"results":"18","hashOfConfig":"13"},{"size":467,"mtime":1619725652191,"results":"19","hashOfConfig":"13"},{"size":211,"mtime":1619725652191,"results":"20","hashOfConfig":"13"},{"size":7301,"mtime":1619732950640,"results":"21","hashOfConfig":"13"},{"size":736,"mtime":1619827205794,"results":"22","hashOfConfig":"13"},{"size":1789,"mtime":1619835905892,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"oxfqi2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/index.js",[],["49","50"],"/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/reportWebVitals.js",[],"/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/App.js",[],"/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/pages/MainPage/index.js",["51"],"/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/Navbar/index.js",[],"/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/Footer/index.js",["52","53","54","55","56","57","58"],"import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n    return (\n        <footer className=\"uk-text-center uk-text-middle footer\">\n        <span>\n            Â©\n            <a className=\"contributor\" href=\"# \" target=\"blank\"></a>\n            <a className=\"contributor\" href=\"#\" target=\"blank\"></a>\n            <a className=\"contributor\" href=\"#\" target=\"blank\"></a>\n            <a className=\"contributor\" href=\"#\" target=\"blank\"></a>\n        </span>\n        <div>\n            <a className=\"view-repo\" href=\" \">\n                View project repository\n                <span uk-icon=\"icon: github\" className=\"contact-icon contact-link-icon\" target=\"_blank\"></span>\n            </a>\n        </div>\n    </footer>\n    );\n}\n\nexport default Footer;\n","/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/InfoCard/InfoCard.js",[],"/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/InfoCard/CommonButton.js",[],"/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/Blobs/index.js",["59","60","61","62","63","64","65"],"/* eslint-disable new-parens */\nimport React from \"react\";\nimport \"./style.css\";\n\nlet canvas, ctx;\nlet render, init;\nlet blob;\n\nclass Blob {\n  constructor() {\n    this.points = [];\n  }\n  \n  init() {\n    for(let i = 0; i < this.numPoints; i++) {\n      let point = new Point(this.divisional * ( i + 1 ), this);\n      // point.acceleration = -1 + Math.random() * 2;\n      this.push(point);\n    }\n  }\n  \n  render() {\n    let canvas = this.canvas;\n    let ctx = this.ctx;\n    let position = this.position;\n    let pointsArray = this.points;\n    let radius = this.radius;\n    let points = this.numPoints;\n    let divisional = this.divisional;\n    let center = this.center;\n    \n    ctx.clearRect(0,0,canvas.width,canvas.height);\n    \n    pointsArray[0].solveWith(pointsArray[points-1], pointsArray[1]);\n\n    let p0 = pointsArray[points-1].position;\n    let p1 = pointsArray[0].position;\n    let _p2 = p1;\n\n    ctx.beginPath();\n    ctx.moveTo(center.x, center.y);\n    ctx.moveTo( (p0.x + p1.x) / 2, (p0.y + p1.y) / 2 );\n\n    for(let i = 1; i < points; i++) {\n      \n      pointsArray[i].solveWith(pointsArray[i-1], pointsArray[i+1] || pointsArray[0]);\n\n      let p2 = pointsArray[i].position;\n      var xc = (p1.x + p2.x) / 2;\n      var yc = (p1.y + p2.y) / 2;\n      ctx.quadraticCurveTo(p1.x, p1.y, xc, yc);\n      // ctx.lineTo(p2.x, p2.y);\n\n      ctx.fillStyle = '#0084B2';\n      // ctx.fillRect(p1.x-2.5, p1.y-2.5, 5, 5);\n\n      p1 = p2;\n    }\n\n    var xc = (p1.x + _p2.x) / 2;\n    var yc = (p1.y + _p2.y) / 2;\n    ctx.quadraticCurveTo(p1.x, p1.y, xc, yc);\n    // ctx.lineTo(_p2.x, _p2.y);\n\n    // ctx.closePath();\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.strokeStyle = '#0084B2';\n    // ctx.stroke();\n    \n/*\n    ctx.fillStyle = '#000000';\n    if(this.mousePos) {\n      let angle = Math.atan2(this.mousePos.y, this.mousePos.x) + Math.PI;\n      ctx.fillRect(center.x + Math.cos(angle) * this.radius, center.y + Math.sin(angle) * this.radius, 5, 5);\n    }\n*/\n    requestAnimationFrame(this.render.bind(this));\n  }\n  \n  push(item) {\n    if(item instanceof Point) {\n      this.points.push(item);\n    }\n  }\n  \n  set color(value) {\n    this._color = value;\n  }\n  get color() {\n    return this._color || '#0084B2';\n  }\n  \n  set canvas(value) {\n    if(value instanceof HTMLElement && value.tagName.toLowerCase() === 'canvas') {\n      this._canvas = canvas;\n      this.ctx = this._canvas.getContext('2d');\n    }\n  }\n  get canvas() {\n    return this._canvas;\n  }\n  \n  set numPoints(value) {\n    if(value > 2) {\n      this._points = value;\n    }\n  }\n  get numPoints() {\n    return this._points || 32;\n  }\n  \n  set radius(value) {\n    if(value > 0) {\n      this._radius = value;\n    }\n  }\n  // changing of size - AA \n  get radius() {\n    return this._radius || 150;\n  }\n  \n  set position(value) {\n    if(typeof value == 'object' && value.x && value.y) {\n      this._position = value;\n    }\n  }\n\n  // change the location or the position of blob- AA\n  get position() {\n    return this._position || { x: 0.1, y: 0.5 };\n  }\n  \n  get divisional() {\n    return Math.PI * 2 / this.numPoints;\n  }\n  \n  get center() {\n    return { x: this.canvas.width * this.position.x, y: this.canvas.height * this.position.y };\n  }\n  \n  set running(value) {\n    this._running = value === true;\n  }\n  get running() {\n    return this.running !== false;\n  }\n}\n\nclass Point {\n  constructor(azimuth, parent) {\n    this.parent = parent;\n    this.azimuth = Math.PI - azimuth;\n    this._components = { \n      x: Math.cos(this.azimuth),\n      y: Math.sin(this.azimuth)\n    };\n    \n    this.acceleration = -0.3 + Math.random() * 0.6;\n  }\n  \n  solveWith(leftPoint, rightPoint) {\n    this.acceleration = (-0.3 * this.radialEffect + ( leftPoint.radialEffect - this.radialEffect ) + ( rightPoint.radialEffect - this.radialEffect )) * this.elasticity - this.speed * this.friction;\n  }\n  \n  set acceleration(value) {\n    if(typeof value == 'number') {\n      this._acceleration = value;\n      this.speed += this._acceleration * 2;\n    }\n  }\n  get acceleration() {\n    return this._acceleration || 0;\n  }\n  \n  set speed(value) {\n    if(typeof value == 'number') {\n      this._speed = value;\n      this.radialEffect += this._speed * 5;\n    }\n  }\n  get speed() {\n    return this._speed || 0;\n  }\n  \n  set radialEffect(value) {\n    if(typeof value == 'number') {\n      this._radialEffect = value;\n    }\n  }\n  get radialEffect() {\n    return this._radialEffect || 0;\n  }\n  \n  get position() {\n    return { \n      x: this.parent.center.x + this.components.x * (this.parent.radius + this.radialEffect), \n      y: this.parent.center.y + this.components.y * (this.parent.radius + this.radialEffect) \n    }\n  }\n  \n  get components() {\n    return this._components;\n  }\n\n  set elasticity(value) {\n    if(typeof value === 'number') {\n      this._elasticity = value;\n    }\n  }\n  get elasticity() {\n    return this._elasticity || 0.001;\n  }\n  set friction(value) {\n    if(typeof value === 'number') {\n      this._friction = value;\n    }\n  }\n  get friction() {\n    return this._friction || 0.0085;\n  }\n}\n\nblob = new Blob;\n\ninit = function() {\n  canvas = document.createElement('canvas');\n  canvas.setAttribute('touch-action', 'none');\n\n  document.body.appendChild(canvas);\n\n  let resize = function() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n  }\n  window.addEventListener('resize', resize);\n  resize();\n  \n  let oldMousePoint = { x: 0, y: 0};\n  let hover = false;\n  let mouseMove = function(e) {\n    \n    let pos = blob.center;\n    let diff = { x: e.clientX - pos.x, y: e.clientY - pos.y };\n    let dist = Math.sqrt((diff.x * diff.x) + (diff.y * diff.y));\n    let angle = null;\n    \n    blob.mousePos = { x: pos.x - e.clientX, y: pos.y - e.clientY };\n    \n    if(dist < blob.radius && hover === false) {\n      let vector = { x: e.clientX - pos.x, y: e.clientY - pos.y };\n      angle = Math.atan2(vector.y, vector.x);\n      hover = true;\n      // blob.color = '#77FF00';\n    } else if(dist > blob.radius && hover === true){ \n      let vector = { x: e.clientX - pos.x, y: e.clientY - pos.y };\n      angle = Math.atan2(vector.y, vector.x);\n      hover = false;\n      blob.color = null;\n    }\n    \n    if(typeof angle == 'number') {\n      \n      let nearestPoint = null;\n      let distanceFromPoint = 100;\n      \n      blob.points.forEach((point)=> {\n        if(Math.abs(angle - point.azimuth) < distanceFromPoint) {\n          // console.log(point.azimuth, angle, distanceFromPoint);\n          nearestPoint = point;\n          distanceFromPoint = Math.abs(angle - point.azimuth);\n        }\n        \n      });\n      \n      if(nearestPoint) {\n        let strength = { x: oldMousePoint.x - e.clientX, y: oldMousePoint.y - e.clientY };\n        strength = Math.sqrt((strength.x * strength.x) + (strength.y * strength.y)) * 10;\n        if(strength > 100) strength = 100;\n        nearestPoint.acceleration = strength / 100 * (hover ? -1 : 1);\n      }\n    }\n    \n    oldMousePoint.x = e.clientX;\n    oldMousePoint.y = e.clientY;\n  }\n  // window.addEventListener('mousemove', mouseMove);\n  window.addEventListener('pointermove', mouseMove);\n  \n  blob.canvas = canvas;\n  blob.init();\n  blob.render();\n}\n\ninit();\n\n\nfunction Blobs() {\nreturn (\n<script src=\"https://code.jquery.com/pep/0.4.3/pep.js\"></script>\n)\n\n}\n\nexport default Blobs;","/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/Navbar/AccountDropdown.js",[],"/Users/armenuhiavanesyan/Programming/Navak/navak-academy/client/src/components/Navbar/MobileNav.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":9,"column":13,"nodeType":"76","endLine":9,"endColumn":65},{"ruleId":"74","severity":1,"message":"75","line":10,"column":13,"nodeType":"76","endLine":10,"endColumn":64},{"ruleId":"77","severity":1,"message":"78","line":10,"column":13,"nodeType":"76","endLine":10,"endColumn":64},{"ruleId":"74","severity":1,"message":"75","line":11,"column":13,"nodeType":"76","endLine":11,"endColumn":64},{"ruleId":"77","severity":1,"message":"78","line":11,"column":13,"nodeType":"76","endLine":11,"endColumn":64},{"ruleId":"74","severity":1,"message":"75","line":12,"column":13,"nodeType":"76","endLine":12,"endColumn":64},{"ruleId":"77","severity":1,"message":"78","line":12,"column":13,"nodeType":"76","endLine":12,"endColumn":64},{"ruleId":"70","severity":1,"message":"79","line":5,"column":13,"nodeType":"72","messageId":"73","endLine":5,"endColumn":16},{"ruleId":"70","severity":1,"message":"80","line":6,"column":5,"nodeType":"72","messageId":"73","endLine":6,"endColumn":11},{"ruleId":"70","severity":1,"message":"81","line":25,"column":9,"nodeType":"72","messageId":"73","endLine":25,"endColumn":17},{"ruleId":"70","severity":1,"message":"82","line":27,"column":9,"nodeType":"72","messageId":"73","endLine":27,"endColumn":15},{"ruleId":"70","severity":1,"message":"83","line":29,"column":9,"nodeType":"72","messageId":"73","endLine":29,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":60,"column":9,"nodeType":"72","messageId":"86","endLine":60,"endColumn":11},{"ruleId":"84","severity":1,"message":"87","line":61,"column":9,"nodeType":"72","messageId":"86","endLine":61,"endColumn":11},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'InfoCard' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ctx' is defined but never used.","'render' is defined but never used.","'position' is assigned a value but never used.","'radius' is assigned a value but never used.","'divisional' is assigned a value but never used.","no-redeclare","'xc' is already defined.","redeclared","'yc' is already defined.","no-global-assign","no-unsafe-negation"]